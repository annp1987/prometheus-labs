#!/bin/bash
cd demo
docker-compose up -d prometheus grafana snmpd snmp-exporter client
docker-compose ps
echo ""
echo "[1;32m ###############################################[0m"
echo "[1;32m ### DEMO #1 -- Network Device Monintoring   ###[0m"
echo "[1;32m ###############################################[0m"
echo ""
echo "[1;33m 1.1      Prometheus Web UI [0m"
echo ""
echo "[1;33m    1.1.1 Targets               - http://localhost:9090/targets[0m"
echo "[1;33m    1.1.2 Current Configuration - http://localhost:9090/config[0m"
echo "[1;33m    1.1.3 Command-Line Flags    - http://localhost:9090/flags[0m"
echo "[1;33m    1.1.4 Alert Rules           - http://localhost:9090/rules[0m"
echo "[1;33m    1.1.5 Service Discovery     - http://localhost:9090/service-discovery[0m"
echo "[1;33m    1.1.6 Runtime Version       - http://localhost:9090/status[0m"
echo "[1;33m    1.1.7 Query & Graph         - https://goo.gl/5TmjWo[0m"
echo ""
echo "... Press Any Key to continue ..."
read
echo "[1;33m 1.2      Grafana Web UI [0m"
echo ""
echo "[1;33m    1.2.1 Login                 - http://localhost:3000/login ( default: admin / admin )[0m"
echo "[1;33m    1.2.2 Add data source       - http://localhost:3000/datasources/new?gettingstarted[0m"
echo "[1;33m          - Name: Prometheus [0m"
echo "[1;33m          - Type: Prometheus [0m"
echo "[1;33m          - URL:  http://localhost:9090 [0m"
echo "[1;33m          - Access: direct [0m"
echo "[1;33m          - Click 'Add' [0m"
echo "[1;33m    1.2.3 import Dashboards     - http://localhost:3000/datasources/edit/1[0m"
echo "[1;33m    1.2.4 Prometheus Status     - http://localhost:3000/dashboard/db/prometheus-stats[0m"
echo "[1;33m    1.2.5 Grafana Status        - http://localhost:3000/dashboard/db/grafana-metrics[0m"
echo "[1;33m    1.2.6 import SNMP Dashboard [0m"
echo "[1;33m          - http://localhost:3000/dashboard/new?editview=import ( upload 'demo/grafana/snmp.json' ) [0m"
echo ""
echo "... Press Any Key to continue ..."
read
echo "[1;33m 1.3      SNMP Exporter [0m"
echo ""
echo "[1;33m    1.3.1 Configuration         - https://github.com/prometheus/snmp_exporter [0m"
echo "[1;33m                                  - input: snmp.yml [0m"
echo ""
echo "[1;33m    1.3.2 Understand Metrics    - docker exec -it client /bin/sh [0m"
echo "[1;33m          # curl -s \"http://snmp-exporter:9116/snmp?module=if_mib&target=snmpd\" | grep -v '^#' | sort [0m"
echo ""
echo "[1;33m    1.3.1 Config Generator      - https://github.com/prometheus/snmp_exporter/tree/master/generator [0m"
echo "[1;33m                                  - input:   generator.yml [0m"
echo "[1;33m                                  - output:  snmp.yml [0m"
echo "[1;33m                                  - command: './generator generate' [0m"
echo ""
echo "... Press Any Key to continue ..."
read
docker-compose stop snmpd snmp-exporter
docker-compose up -d node1 node2
docker-compose ps
echo ""
echo "[1;32m ###############################################[0m"
echo "[1;32m ### DEMO #2 -- OS Level (Node) Monintoring  ###[0m"
echo "[1;32m ###############################################[0m"
echo ""
echo "[1;33m 2.1      Node Exporter [0m"
echo ""
echo "[1;33m    2.1.1 Configuration         - https://github.com/prometheus/node_exporter [0m"
echo ""
echo "[1;33m    2.1.2 Understand Metrics    - docker exec -it client /bin/sh [0m"
echo "[1;33m          # curl -s http://node1:9100/metrics | grep -v '^#' | sort [0m"
echo ""
echo "[1;33m    2.1.3 import 'Node Exporter Full' Dashboard [0m"
echo "[1;33m                                - http://localhost:3000/dashboard/new?editview=import ( id = 1860 ) [0m"
echo "[1;33m    2.1.4 import 'Node Exporter Server Metrics' Dashboard [0m"
echo "[1;33m                                - http://localhost:3000/dashboard/new?editview=import ( id = 405 ) [0m"
echo ""
echo "... Press Any Key to continue ..."
read
docker-compose stop node1 node2
docker-compose up -d kafka kafka-manager kafka-exporter fluentd fluentd-exporter
docker-compose ps
echo ""
echo "[1;32m ###############################################[0m"
echo "[1;32m ### DEMO #3 -- Middleware Monintoring       ###[0m"
echo "[1;32m ###############################################[0m"
echo ""
echo "[1;33m 3.1      JMX Exporter [0m"
echo ""
echo "[1;33m    3.1.1 Configuration         - https://github.com/prometheus/jmx_exporter#configuration [0m"
echo "[1;33m    3.1.2 Example (1) Kafka     - https://robustperception.io/monitoring-kafka-with-prometheus/ [0m"
echo "[1;33m    3.1.3 Example (1) Cassandra - https://robustperception.io/monitoring-cassandra-with-prometheus/ [0m"
echo ""
echo "... Press Any Key to continue ..."
read
echo "[1;33m 3.2      Kafka Manager Web UI [0m"
echo ""
echo "[1;33m    3.2.1 Add Cluster           - http://localhost:9000/addCluster [0m"
echo "[1;33m          - Cluster Name = Lab [0m"
echo "[1;33m          - Cluster Zookeeper Hosts = kafka:2181 [0m"
echo "[1;33m          - Enable JMX Polling : CHECKED [0m"
echo "[1;33m          - Clicke "SAVE" [0m"
echo "[1;33m    3.2.2 Topic Throughput      - http://localhost:9000/clusters/Lab/topics/dummy [0m"
echo "[1;33m    3.2.3 Consumer Status       - http://localhost:9000/clusters/Lab/consumers/dummy/topic/dummy/type/KF [0m"
echo ""
echo "... Press Any Key to continue ..."
read
echo "[1;33m 3.3      Grafana Web UI [0m"
echo ""
echo "[1;33m    3.3.1 import 'Kafka I/O' Dashboard [0m"
echo "[1;33m          - http://localhost:3000/dashboard/new?editview=import ( upload 'demo/grafana/kafka.json ) [0m"
echo "[1;33m    3.3.2 import 'Fluentd Output Health' Dashboard [0m"
echo "[1;33m          - http://localhost:3000/dashboard/new?editview=import ( upload 'demo/grafana/fluentd.json ) [0m"
echo ""
docker-compose stop kafka kafka-manager kafka-exporter fluentd fluentd-exporter
docker-compose ps
